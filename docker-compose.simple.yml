# Simplified Docker Compose for Windows Development
services:
  # Claude Code Dashboard Backend
  dashboard-backend:
    build: 
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DISABLE_AUTH=true
      - SECRET_KEY=ci-test-secret-key
      - LOG_LEVEL=ERROR
    volumes:
      # Mock Docker socket for testing (CI will handle missing socket gracefully)
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Claude Code Dashboard Frontend  
  dashboard-frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://dashboard-backend:8000/api
    depends_on:
      dashboard-backend:
        condition: service_healthy
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  test-network:
    driver: bridge

# Usage:
# docker-compose -f docker-compose.simple.yml up --build
# 
# This version:
# - Includes health checks for CI testing
# - Uses isolated network for testing
# - Optimized for CI/CD pipeline